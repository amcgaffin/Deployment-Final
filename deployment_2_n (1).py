# -*- coding: utf-8 -*-
"""Deployment-2.N

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mMdw3cQiIhvFHy8CttVmfNRf-DWgSW9W
"""

import pickle
import pandas as pd

# List of features in the expected order
features = [
    'age', 'hypertension', 'heart_disease', 'avg_glucose_level', 'bmi',
    'gender_Male', 'gender_Other', 'ever_married_Yes', 'work_type_Never_worked',
    'work_type_Private', 'work_type_Self-employed', 'work_type_children',
    'Residence_type_Urban', 'smoking_status_formerly smoked',
    'smoking_status_never smoked', 'smoking_status_smokes'
]

# Load pickled model
with open('final_model.pkl', 'rb') as f:
    model = pickle.load(f)

# Example input
user_input = {
    'age': 45,
    'hypertension': 1,
    'heart_disease': 0,
    'avg_glucose_level': 105.5,
    'bmi': 28.3,
    'gender': 'Male',              # Male / Female / Other
    'ever_married': 'Yes',         # Yes / No
    'work_type': 'Private',        # Private / Self-employed / Never_worked / children / Govt_job
    'Residence_type': 'Urban',     # Urban / Rural
    'smoking_status': 'never smoked'  # formerly smoked / never smoked / smokes / Unknown
}

# Manual one-hot encoding
input_vector = {
    'age': user_input['age'],
    'hypertension': user_input['hypertension'],
    'heart_disease': user_input['heart_disease'],
    'avg_glucose_level': user_input['avg_glucose_level'],
    'bmi': user_input['bmi'],
    'gender_Male': int(user_input['gender'] == 'Male'),
    'gender_Other': int(user_input['gender'] == 'Other'),
    'ever_married_Yes': int(user_input['ever_married'] == 'Yes'),
    'work_type_Never_worked': int(user_input['work_type'] == 'Never_worked'),
    'work_type_Private': int(user_input['work_type'] == 'Private'),
    'work_type_Self-employed': int(user_input['work_type'] == 'Self-employed'),
    'work_type_children': int(user_input['work_type'] == 'children'),
    'Residence_type_Urban': int(user_input['Residence_type'] == 'Urban'),
    'smoking_status_formerly smoked': int(user_input['smoking_status'] == 'formerly smoked'),
    'smoking_status_never smoked': int(user_input['smoking_status'] == 'never smoked'),
    'smoking_status_smokes': int(user_input['smoking_status'] == 'smokes')
}

# Convert to DataFrame
input_df = pd.DataFrame([input_vector], columns=features)

# Get prediction
prediction = model.predict(input_df)

print(f"Predicted Stroke Risk: {prediction[0]}")